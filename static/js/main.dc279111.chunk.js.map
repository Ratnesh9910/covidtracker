{"version":3,"sources":["InfoBox.js","Map.js","Table.js","util.js","LineGraph.js","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","Card","className","CardContent","Typography","color","Map","Table","countries","map","country","sortData","data","sort","a","b","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetchData","fetch","then","response","json","console","log","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","getCountriesData","id","name","iso2","sortedData","onCountryChange","event","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAqBeA,MAlBf,YAAyC,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAC5B,OACI,cAACC,EAAA,EAAD,CAAMC,UAAU,UAAhB,SACI,eAACC,EAAA,EAAD,WAEI,cAACC,EAAA,EAAD,CAAYF,UAAU,iBAAiBG,MAAO,gBAA9C,SAA+DP,IAE/D,oBAAII,UAAU,iBAAd,SAAgCH,IAEhC,eAACK,EAAA,EAAD,CAAYF,UAAU,iBAAiBG,MAAO,gBAA9C,UAEKL,EAFL,kBCDDM,MATf,WACI,OACI,qBAAKJ,UAAU,MAAf,SACA,8C,YCYOK,MAff,YAA8B,IAAdC,EAAa,EAAbA,UACZ,OAAQ,qBAAKN,UAAY,QAAjB,SACAM,EAAUC,KAAI,gBAAEC,EAAF,EAAEA,QAASX,EAAX,EAAWA,MAAX,OACf,+BACI,6BAAKW,IACL,6BACA,iCAASX,e,QCRXY,EAAW,SAACC,GAErB,OADgB,YAAOA,GACLC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEf,MAAQgB,EAAEhB,OAAS,EAAI,M,yBCEzDiB,EAAU,CACdC,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRC,MAAO,CACLC,OAAQ,IAGZC,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACTC,MAAO,SAAUC,EAAahB,GAC5B,OAAOiB,IAAQD,EAAYE,OAAOC,OAAO,WAI/CC,OAAQ,CACNC,MAAO,CACL,CACEC,KAAM,OACNC,KAAM,CACJJ,OAAQ,WACRK,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTpB,SAAS,GAEXqB,MAAO,CAELC,SAAU,SAAUV,EAAOW,EAAOC,GAChC,OAAOb,IAAQC,GAAOC,OAAO,YAQnCY,EAAiB,SAAC/B,EAAMgC,GAC5B,IACIC,EADAC,EAAY,GAEhB,IAAK,IAAIC,KAAQnC,EAAKb,MAAO,CAC3B,GAAI8C,EAAe,CACjB,IAAIG,EAAe,CACjBC,EAAGF,EACHG,EAAGtC,EAAKgC,GAAWG,GAAQF,GAE7BC,EAAUK,KAAKH,GAEjBH,EAAgBjC,EAAKgC,GAAWG,GAElC,OAAOD,GA2CMM,MAxCf,YAAmC,IAAdR,EAAa,EAAbA,UACnB,EAAwBS,mBAAS,IAAjC,mBAAOzC,EAAP,KAAa0C,EAAb,KAmBA,OAjBAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,sBAAA1C,EAAA,sEACV2C,MAAM,8DACTC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAAC9C,GACL,IAAIkC,EAAYH,EAAe/B,EAAMgC,GACrCU,EAAQR,GACRe,QAAQC,IAAIhB,MARA,2CAAH,qDAafU,MACC,CAACZ,IAGF,+BACO,OAAJhC,QAAI,IAAJA,OAAA,EAAAA,EAAMmD,QAAS,GACd,cAAC,IAAD,CACEnD,KAAM,CACJoD,SAAU,CACR,CACEC,gBAAiB,yBACjBC,YAAa,UACbtD,KAAMA,KAIZI,QAASA,OCqBJmD,MA9Gf,WAEE,MAAkCd,mBAAS,IAA3C,mBAAO7C,EAAP,KAAkB4D,EAAlB,KACA,EAA8Bf,mBAAS,aAAvC,mBAAO3C,EAAP,KAAgB2D,EAAhB,KACA,EAAsChB,mBAAS,IAA/C,mBAAOiB,EAAP,KAAoBC,EAApB,KACA,EAAkClB,mBAAS,IAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KAEAlB,qBAAU,WACRE,MAAM,sCACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA9C,GACJ2D,EAAe3D,QAEjB,IAGJ2C,qBAAU,WACR,IAAMmB,EAAgB,uCAAG,sBAAA5D,EAAA,sEACjB2C,MAAM,4CACXC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAC9C,GAGL,IAAMJ,EAAYI,EAAKH,KAAI,SAACC,GAAD,MACzB,CACEiE,GAAGjE,EAAQiE,GACbC,KAAMlE,EAAQA,QACdoB,MAAOpB,EAAQ4D,YAAYO,SAGzBC,EAAanE,EAASC,GAC1B6D,EAAaK,GACZV,EAAa5D,MAfO,2CAAH,qDAoBtBkE,MAEC,IACH,IAAMK,EAAe,uCAAG,WAAOC,GAAP,iBAAAlE,EAAA,6DAChBmE,EAAcD,EAAME,OAAOpD,MAG7BqD,EAAqB,cAAfF,EACV,qCADU,mDAEgCA,GANpB,SAQjBxB,MAAM0B,GACXzB,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAA9C,GACJyD,EAAWY,GACXV,EAAe3D,MAZM,2CAAH,sDAkBnB,OAHDiD,QAAQC,IAAI,mBAAoBQ,GAI7B,sBAAKpE,UAAU,MAAf,UACA,sBAAKA,UAAY,YAAjB,UAEA,qBAAKA,UAAU,gBAGjB,uDACA,cAACkF,EAAA,EAAD,CAAalF,UAAU,gBAAvB,SACE,eAACmF,EAAA,EAAD,CACAC,QAAQ,WACRxD,MAASpB,EACR6E,SAAWR,EAHZ,UAIA,cAACS,EAAA,EAAD,CAAU1D,MAAM,YAAhB,uBAKFtB,EAAUC,KAAI,SAAAC,GAAO,OAEnB,cAAC8E,EAAA,EAAD,CAAU1D,MAAOpB,EAAQoB,MAAzB,SAAiCpB,EAAQkE,eAK7C,sBAAM1E,UAAU,aAAhB,UACA,cAAC,EAAD,CAASJ,MAAM,oBACdC,MAAOuE,EAAYmB,WAAYzF,MAAOsE,EAAYvE,QACnD,cAAC,EAAD,CAASD,MAAM,YACdC,MAAOuE,EAAYoB,eAAgB1F,MAAOsE,EAAYqB,YACvD,cAAC,EAAD,CAAS7F,MAAM,SACdC,MAAOuE,EAAYsB,YAAa5F,MAAOsE,EAAYuB,YAEpD,cAAC,EAAD,OAIA,cAAC5F,EAAA,EAAD,CAAMC,UAAW,aAAjB,SACA,eAACC,EAAA,EAAD,WACA,uDACE,cAAC,EAAD,CAAOK,UAAWgE,IAClB,qDACA,cAAC,EAAD,aCjGasB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc279111.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Card, CardContent, Typography } from '@material-ui/core'\r\n\r\nfunction InfoBox({title, cases, total}) {\r\n    return (\r\n        <Card className=\"infoBox\">\r\n            <CardContent>\r\n                {/* Title */}\r\n                <Typography className=\"infoBox__title\" color =\"textSecondary\">{title}</Typography>\r\n                {/* +120k Number of cases */}\r\n                <h2 className=\"infoBox__cases\">{cases}</h2>\r\n                {/* 1.2M Total */}\r\n                <Typography className=\"infoBox__total\" color =\"textSecondary\" >\r\n            \r\n                    {total} Total\r\n                </Typography>\r\n                </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox\r\n","import React from 'react'\r\n\r\nfunction Map() {\r\n    return (\r\n        <div className=\"map\">\r\n        <h1> i am Map</h1>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React from 'react'\r\nimport './Table.css';\r\nfunction Table({countries }) {\r\n    return  <div className = \"table\">\r\n           {countries.map(({country, cases}) => (\r\n           <tr>\r\n               <td>{country}</td>\r\n               <td>\r\n               <strong>{cases}</strong>\r\n               </td>\r\n           </tr>\r\n\r\n          ) )} \r\n        </div>;\r\n    \r\n}\r\n\r\nexport default Table\r\n","export const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","import { FormControl, MenuItem, Select, Card, CardContent,} from '@material-ui/core';\nimport React, {useState, useEffect} from 'react';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport './App.css';\nimport Table from './Table';\nimport { sortData } from \"./util\";\nimport LineGraph from './LineGraph';\n// import {CategoryScale} from 'chart.js';\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(()=>{\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then(response => response.json())\n    .then(data =>{\n      setCountryInfo(data);\n    });\n  },[]);\n\n\nuseEffect(()=>{\n  const getCountriesData = async () =>{\n    await fetch(\"https://disease.sh/v3/covid-19/countries\")\n    .then((response) => response.json())\n    .then((data) => {\n      // console.log(data)\n\n      const countries = data.map((country) =>(\n        {\n          id:country.id,\n        name: country.country,\n        value: country.countryInfo.iso2\n      }\n    ));\n    const sortedData = sortData(data);\n      setTableData(sortedData);\n       setCountries(countries);\n\n    });\n  };\n\n  getCountriesData();\n\n}, []);\nconst onCountryChange = async (event) => {\n  const countryCode = event.target.value;\n   \n\nconst url = countryCode ==='worldwide' \n? 'https://disease.sh/v3/covid-19/all':\n`https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n await fetch(url)\n .then(response=> response.json())\n .then(data =>{\n   setCountry(countryCode);\n   setCountryInfo(data);\n });\n};\n console.log(\"COUNTRY INFO >>>\", countryInfo);\n  \n\n  return (\n    <div className=\"app\">\n    <div className = \"app__left\">\n\n    <div className=\"app__header\">\n\n    </div>\n  <h1>RASA COVID-19 TRACKER</h1>\n  <FormControl className=\"app__dropdown\">\n    <Select\n    variant=\"outlined\"\n    value = {country}\n     onChange= {onCountryChange}>\n    <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\n   \n\n{\n  countries.map(country=>(\n    \n    <MenuItem value={country.value}>{country.name}</MenuItem>\n  ))\n}\n</Select>\n</FormControl>\n<div  className=\"app__stats\">\n<InfoBox title=\"Coronavirus Cases\"\n cases={countryInfo.todayCases} total={countryInfo.cases} />\n<InfoBox title=\"Recovered\"\n cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n<InfoBox title=\"Deaths\"\n cases={countryInfo.todayDeaths} total={countryInfo.deaths}/>\n</div>\n<Map/>\n  \n\n</div>\n<Card className =\"app__right\">\n<CardContent>\n<h3>Live Cases by country</h3>\n  <Table countries={tableData}/>\n  <h3>Worldwide new Cases</h3>\n  <LineGraph/>\n  {/*Graph */}\n</CardContent>\n  \n</Card>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}